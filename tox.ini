[tox]
envlist = lint, static, test
isolated_build = True

[vars]
src_path = {toxinidir}/cos_alerter
tst_path = {toxinidir}/tests
all_path = {[vars]src_path} {[vars]tst_path}

[testenv:fmt]
description = Apply coding style standards to code
skip_install = True
deps =
    black
    ruff
commands =
    ruff --fix {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
skip_install = True
deps =
    black
    ruff
    codespell
commands =
    codespell --skip .git --skip .tox --skip build --skip venv
    ruff {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:static]
description = Run static analysis checks
deps =
    pyright
commands =
    pyright

[testenv:test]
description = Run unit tests
deps =
    coverage[toml]
    freezegun
    pyfakefs
    pytest
    pyyaml
    werkzeug
commands =
    coverage run --source {[vars]src_path} -m pytest -m "not slow" -v --log-cli-level=INFO {[vars]tst_path}

[testenv:slow-tests]
description = Run unit tests
depends = test
deps =
    coverage[toml]
    freezegun
    pyfakefs
    pytest
    pyyaml
commands =
    coverage run -a --source {[vars]src_path} -m pytest -m slow -v --log-cli-level=INFO {[vars]tst_path}

[testenv:coverage]
description = Check the code coverage
depends =
    test
    slow-tests
deps =
    coverage
commands =
    coverage report --show-missing --fail-under 100
